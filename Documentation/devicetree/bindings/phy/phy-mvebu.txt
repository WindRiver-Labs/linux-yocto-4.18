* Marvell MVEBU SATA PHY

Power control for the SATA phy found on Marvell MVEBU SoCs.

This document extends the binding described in phy-bindings.txt

Required properties :

 - reg		   : Offset and length of the register set for the SATA device
 - compatible	   : Should be "marvell,mvebu-sata-phy"
 - clocks	   : phandle of clock and specifier that supplies the device
 - clock-names	   : Should be "sata"

Example:
		sata-phy@84000 {
			compatible = "marvell,mvebu-sata-phy";
			reg = <0x84000 0x0334>;
			clocks = <&gate_clk 15>;
			clock-names = "sata";
			#phy-cells = <0>;
		};

Armada 375 USB cluster
----------------------

Armada 375 comes with an USB2 host and device controller and an USB3
controller. The USB cluster control register allows to manage common
features of both USB controllers.

Required properties:

- compatible: "marvell,armada-375-usb-cluster"
- reg: Should contain usb cluster register location and length.
- #phy-cells : from the generic phy bindings, must be 1. Possible
values are 1 (USB2), 2 (USB3).

Example:
		usbcluster: usb-cluster@18400 {
			compatible = "marvell,armada-375-usb-cluster";
			reg = <0x18400 0x4>;
			#phy-cells = <1>
		};

Armada 3700 and CP110 UTMI PHY
----------------------
Armada 3700 and CP110 comes with two UTMI PHYs for USB2.

Required Properties:

- compatible: For Armada-3700 it is "marvell,armada-3700-utmi-phy",
              and for CP110 it is "marvell,cp110-utmi-phy".
- reg: register ranges as listed in the reg-names property
- reg-names: include the following entries:
             "utmi": utmi registers, which is mandatory and must be first one.
             "utmi-cfg-reg": UTMI config Register, which is needed on CP110.
             "usb-cfg-reg": USB config Register, which is needed on CP110, and
             UTMI0 and UTMI1 share the same USB config register.
- utmi-port: The USB port utmi phy connected to
- #phy-cells: Standard property (Documentation: phy-bindings.txt) Should be 0.
- utmi-index: The index to differentiate the PHY if there are 2 same UTMI PHY,
              and currently it is used by CP110 for UTMI mux config.

Example:
Armada-3700 UTMI PHY Node:
============
		utmi_usb32: utmi@5d000 {
			compatible = "marvell,armada-3700-utmi-phy";
			reg = <0x5d000 0x1000>;
			utmi-port = <0>;
			#phy-cells = <0>;
			status = "okay";
		};

		utmi_usb2: utmi@5f000 {
			compatible = "marvell,armada-3700-utmi-phy";
			reg = <0x5f000 0x1000>;
			utmi-port = <3>;
			#phy-cells = <0>;
			status = "okay";
		};

CP110 UTMI PHY Node:
============
		utmi0: utmi@580000 {
			compatible = "marvell,cp110-utmi-phy";
			reg = <0x580000 0x1000>,
			      <0x440420 0x4>,
			      <0x440440 0x4>;
			reg-names = "utmi", "usb-cfg-reg", "utmi-cfg-reg";
			utmi-port = <UTMI_PHY_TO_USB3_HOST0>;
			utmi-index = <0>;
			#phy-cells = <0>;
			status = "okay";
		};

		utmi1: utmi@581000 {
			compatible = "marvell,cp110-utmi-phy";
			reg = <0x581000 0x1000>,
			      <0x440420 0x4>
			      <0x440444 0x4>;
			reg-names = "utmi", "usb-cfg-reg", "utmi-cfg-reg";
			utmi-port = <UTMI_PHY_TO_USB3_HOST1>;
			utmi-index = <1>;
			#phy-cells = <0>;
			status = "okay";
		};

Armada-3700 UTMI PHY consumer:
=============
		usb@5e000 {
			status = "okay";
			phys = <&utmi_usb2>;
			phy-names = "usb";
		};

		udc@54100 {
			status = "okay";
			phys = <&utmi_usb32>;
			phy-names = "usb";
		};

CP110 UTMI PHY consumer:
=============
		usb3h0: usb3@500000 {
			status = "okay";
			phys = <&utmi0>;
			phy-names = "usb";
		};
		usb3h1: usb3@510000 {
			status = "okay";
			phys = <&utmi1>;
			phy-names = "usb";
		};
